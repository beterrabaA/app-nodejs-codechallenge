services:
  antifraud:
    build:
      context: antifraud-service
      dockerfile: Dockerfile
    container_name: app_antifraud
    depends_on:
      - transaction
      - broker
    networks:
      - broker-network

  transaction:
    container_name: app_transaction
    hostname: transaction
    build:
      context: transaction-service
      dockerfile: Dockerfile
    depends_on:
      database_pg:
        condition: service_healthy
      broker:
        condition: service_healthy
    # env_file: transaction-service/.env
    environment:
      - DATABASE_URL=${DATABASE_URL}
      - PORT=${PORT}
      - KAFKAJS_NO_PARTITIONER_WARNING=1
    ports:
      - ${PORT}:4000
    networks:
      - prisma-network
      - broker-network

  database_pg:
    image: postgres:17
    hostname: database_pg
    container_name: app_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 3s
      timeout: 5s
      retries: 10
    ports:
      - ${POSTGRES_PORT}:5432
    # env_file: transaction-service/.env
    environment:
      PGUSER: ${POSTGRES_USER}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data # Persist data
    networks:
      - prisma-network

volumes:
  postgres_data: # Define a named volume for persistent data

networks:
  prisma-network:
    name: prisma-network
  broker-network:
    name: broker-network
